#!/bin/bash

# –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –§–¢–†
# –£–¥–∞–ª—è–µ—Ç –í–°–Å –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–Ω–æ–≤–æ

set -e

echo "üî• –ü–û–õ–ù–ê–Ø –ü–ï–†–ï–£–°–¢–ê–ù–û–í–ö–ê –°–ò–°–¢–ï–ú–´ –§–¢–†"
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í–°–ï –î–ê–ù–ù–´–ï –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´!"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo"
   exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
systemctl stop nginx 2>/dev/null || true
systemctl stop php8.3-fpm 2>/dev/null || true
systemctl stop mysql 2>/dev/null || true

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ–µ–∫—Ç..."
rm -rf /var/www/ftr
rm -rf /var/backups/ftr
rm -f /etc/nginx/sites-enabled/ftr
rm -f /etc/nginx/sites-available/ftr
rm -f /etc/cron.d/ftr-backup

# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
echo "üßπ –û—á–∏—â–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏..."
rm -f /etc/apt/sources.list.d/sury-php.list
rm -f /etc/apt/sources.list.d/ondrej-ubuntu-php-*.list
rm -f /etc/apt/sources.list.d/ondrej-*.list
rm -f /etc/apt/sources.list.d/*sury*.list
rm -f /etc/apt/sources.list.d/*ondrej*.list
rm -f /etc/apt/sources.list.d/php.list
# –£–¥–∞–ª—è–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ sources.list
sed -i '/packages.sury.org/d' /etc/apt/sources.list
sed -i '/ondrej/d' /etc/apt/sources.list
# –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–∏
apt-key del 4F4EA0AAE5267A6C 2>/dev/null || true
apt-key del 14AA40EC0831756756D7F66C4F4EA0AAE5267A6C 2>/dev/null || true
# –û—á–∏—â–∞–µ–º –∫—ç—à apt
rm -rf /var/lib/apt/lists/*
rm -rf /var/cache/apt/archives/*

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ python3-apt –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ apt_pkg
echo "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º python3-apt..."
apt install -y python3-apt || true

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update -y || true
apt upgrade -y || true

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã..."
apt install -y \
    php \
    php-fpm \
    php-mysql \
    php-xml \
    php-gd \
    php-curl \
    php-zip \
    php-mbstring \
    php-bcmath \
    php-intl \
    php-sqlite3 \
    nginx \
    mysql-server \
    composer \
    git \
    unzip \
    curl \
    cron \
    rsync

# –ó–∞–ø—É—Å–∫ MySQL
echo "üóÑÔ∏è  –ó–∞–ø—É—Å–∫–∞–µ–º MySQL..."
systemctl start mysql
systemctl enable mysql

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MySQL
echo "üóÑÔ∏è  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MySQL..."
mysql_secure_installation <<EOF

y
root_password
root_password
y
y
y
y
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è  –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
mysql -u root -proot_password <<EOF
DROP DATABASE IF EXISTS ftr_registration;
CREATE DATABASE ftr_registration CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
DROP USER IF EXISTS 'ftr_user'@'localhost';
CREATE USER 'ftr_user'@'localhost' IDENTIFIED BY 'ftr_password';
GRANT ALL PRIVILEGES ON ftr_registration.* TO 'ftr_user'@'localhost';
FLUSH PRIVILEGES;
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
mkdir -p /var/www/ftr
cd /var/www/ftr

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
git clone https://github.com/punk03/ftr.git .

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ artisan —Ñ–∞–π–ª–∞
if [ ! -f "artisan" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª artisan –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Laravel –∫–∞—Ä–∫–∞—Å..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Laravel –ø—Ä–æ–µ–∫—Ç —Å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π –≤–µ—Ä—Å–∏–µ–π
    cd /tmp
    composer create-project laravel/laravel:^10.0 laravel_skeleton_temp --no-interaction --prefer-dist
    cd laravel_skeleton_temp
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã Laravel
    cp artisan /var/www/ftr/ 2>/dev/null || echo "artisan –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤—Ä–µ–º–µ–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ"
    cp -r bootstrap /var/www/ftr/ 2>/dev/null || echo "bootstrap –Ω–µ –Ω–∞–π–¥–µ–Ω"
    cp -r public /var/www/ftr/ 2>/dev/null || echo "public –Ω–µ –Ω–∞–π–¥–µ–Ω"
    cp -r config /var/www/ftr/ 2>/dev/null || echo "config –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ server.php
    if [ -f "server.php" ]; then
        cp server.php /var/www/ftr/ 2>/dev/null || echo "server.php –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Laravel –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
    mkdir -p /var/www/ftr/storage/app/public
    mkdir -p /var/www/ftr/storage/framework/cache
    mkdir -p /var/www/ftr/storage/framework/sessions
    mkdir -p /var/www/ftr/storage/framework/views
    mkdir -p /var/www/ftr/storage/logs
    mkdir -p /var/www/ftr/bootstrap/cache
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º bootstrap/app.php –¥–ª—è Laravel 10
    cd /var/www/ftr
    cat > bootstrap/app.php << 'EOF'
<?php

$app = new Illuminate\Foundation\Application(
    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)
);

$app->singleton(
    Illuminate\Contracts\Http\Kernel::class,
    App\Http\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Console\Kernel::class,
    App\Console\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Debug\ExceptionHandler::class,
    App\Exceptions\Handler::class
);

return $app;
EOF

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–ª–∞—Å—Å—ã Laravel
    mkdir -p app/Http app/Console app/Exceptions
    
    # App\Http\Kernel
    cat > app/Http/Kernel.php << 'EOF'
<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    protected $middleware = [
        \Illuminate\Http\Middleware\TrustProxies::class,
        \Illuminate\Http\Middleware\HandleCors::class,
        \Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance::class,
        \Illuminate\Http\Middleware\ValidatePostSize::class,
        \Illuminate\Foundation\Http\Middleware\TrimStrings::class,
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
    ];

    protected $middlewareGroups = [
        'web' => [
            \Illuminate\Cookie\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \Illuminate\Foundation\Http\Middleware\ValidateCsrfToken::class,
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],

        'api' => [
            \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
            \Illuminate\Routing\Middleware\ThrottleRequests::class.':api',
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],
    ];

    protected $middlewareAliases = [
        'auth' => \Illuminate\Auth\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'precognitive' => \Illuminate\Foundation\Http\Middleware\HandlePrecognitiveRequests::class,
        'signed' => \App\Http\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
    ];
}
EOF

    # App\Console\Kernel
    cat > app/Console/Kernel.php << 'EOF'
<?php

namespace App\Console;

use Illuminate\Console\Scheduling\Schedule;
use Illuminate\Foundation\Console\Kernel as ConsoleKernel;

class Kernel extends ConsoleKernel
{
    protected $commands = [
        //
    ];

    protected function schedule(Schedule $schedule): void
    {
        // $schedule->command('inspire')->hourly();
    }

    protected function commands(): void
    {
        $this->load(__DIR__.'/Commands');

        require base_path('routes/console.php');
    }
}
EOF

    # App\Exceptions\Handler
    cat > app/Exceptions/Handler.php << 'EOF'
<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
    protected $dontReport = [
        //
    ];

    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }
    }
EOF

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ middleware
    mkdir -p app/Http/Middleware
    
    cat > app/Http/Middleware/RedirectIfAuthenticated.php << 'EOF'
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class RedirectIfAuthenticated
{
    public function handle(Request $request, Closure $next, string ...$guards): Response
    {
        $guards = empty($guards) ? [null] : $guards;

        foreach ($guards as $guard) {
            if (Auth::guard($guard)->check()) {
                return redirect('/home');
            }
        }

        return $next($request);
    }
}
EOF

    cat > app/Http/Middleware/ValidateSignature.php << 'EOF'
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Routing\Middleware\ValidateSignature as Middleware;
use Symfony\Component\HttpFoundation\Response;

class ValidateSignature extends Middleware
{
    protected $except = [
        //
    ];
    }
EOF

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
    mkdir -p app/Providers
    
    cat > app/Providers/AppServiceProvider.php << 'EOF'
<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    public function register(): void
    {
        //
    }

    public function boot(): void
    {
        //
    }
}
EOF

    cat > app/Providers/AuthServiceProvider.php << 'EOF'
<?php

namespace App\Providers;

use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Gate;

class AuthServiceProvider extends ServiceProvider
{
    protected $policies = [
        //
    ];

    public function boot(): void
    {
        //
    }
}
EOF

    cat > app/Providers/EventServiceProvider.php << 'EOF'
<?php

namespace App\Providers;

use Illuminate\Auth\Events\Registered;
use Illuminate\Auth\Listeners\SendEmailVerificationNotification;
use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Event;

class EventServiceProvider extends ServiceProvider
{
    protected $listen = [
        Registered::class => [
            SendEmailVerificationNotification::class,
        ],
    ];

    public function boot(): void
    {
        //
    }

    public function shouldDiscoverEvents(): bool
    {
        return false;
    }
}
EOF

    cat > app/Providers/RouteServiceProvider.php << 'EOF'
<?php

namespace App\Providers;

use Illuminate\Cache\RateLimiting\Limit;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Facades\Route;

class RouteServiceProvider extends ServiceProvider
{
    public const HOME = '/home';

    public function boot(): void
    {
        $this->configureRateLimiting();

        $this->routes(function () {
            Route::middleware('api')
                ->prefix('api')
                ->group(base_path('routes/api.php'));

            Route::middleware('web')
                ->group(base_path('routes/web.php'));
        });
    }

    protected function configureRateLimiting(): void
    {
        RateLimiter::for('api', function (Request $request) {
            return Limit::perMinute(60)->by($request->user() ? $request->user()->id : $request->ip());
        });
    }
}
EOF

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤
    mkdir -p routes
    cat > routes/api.php << 'EOF'
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

Route::get('/user', function (Request $request) {
    return $request->user();
})->middleware('auth:sanctum');
EOF

    cat > routes/console.php << 'EOF'
<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote');
EOF

    cat > routes/web.php << 'EOF'
<?php

use Illuminate\Support\Facades\Route;

Route::get('/', function () {
    return view('welcome');
});
EOF

    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é view
    mkdir -p resources/views
    cat > resources/views/welcome.blade.php << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FTR Registration System</title>
</head>
<body>
    <h1>FTR Registration System</h1>
    <p>System is running successfully!</p>
</body>
</html>
EOF

    # –°–æ–∑–¥–∞–µ–º config/app.php —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
    cat > config/app.php << 'EOF'
<?php

return [
    'name' => env('APP_NAME', 'FTR Registration'),
    'env' => env('APP_ENV', 'production'),
    'debug' => (bool) env('APP_DEBUG', false),
    'url' => env('APP_URL', 'http://localhost'),
    'asset_url' => env('ASSET_URL'),
    'timezone' => 'UTC',
    'locale' => 'en',
    'fallback_locale' => 'en',
    'faker_locale' => 'en_US',
    'key' => env('APP_KEY'),
    'cipher' => 'AES-256-CBC',
    'maintenance' => [
        'driver' => 'file',
    ],
    'providers' => [
        Illuminate\Auth\AuthServiceProvider::class,
        Illuminate\Broadcasting\BroadcastServiceProvider::class,
        Illuminate\Bus\BusServiceProvider::class,
        Illuminate\Cache\CacheServiceProvider::class,
        Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,
        Illuminate\Cookie\CookieServiceProvider::class,
        Illuminate\Database\DatabaseServiceProvider::class,
        Illuminate\Encryption\EncryptionServiceProvider::class,
        Illuminate\Filesystem\FilesystemServiceProvider::class,
        Illuminate\Foundation\Providers\FoundationServiceProvider::class,
        Illuminate\Hashing\HashServiceProvider::class,
        Illuminate\Mail\MailServiceProvider::class,
        Illuminate\Notifications\NotificationServiceProvider::class,
        Illuminate\Pagination\PaginationServiceProvider::class,
        Illuminate\Pipeline\PipelineServiceProvider::class,
        Illuminate\Queue\QueueServiceProvider::class,
        Illuminate\Redis\RedisServiceProvider::class,
        Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,
        Illuminate\Session\SessionServiceProvider::class,
        Illuminate\Translation\TranslationServiceProvider::class,
        Illuminate\Validation\ValidationServiceProvider::class,
        Illuminate\View\ViewServiceProvider::class,
        App\Providers\AppServiceProvider::class,
        App\Providers\AuthServiceProvider::class,
        App\Providers\EventServiceProvider::class,
        App\Providers\RouteServiceProvider::class,
    ],
    'aliases' => [
        'App' => Illuminate\Support\Facades\App::class,
        'Arr' => Illuminate\Support\Arr::class,
        'Artisan' => Illuminate\Support\Facades\Artisan::class,
        'Auth' => Illuminate\Support\Facades\Auth::class,
        'Blade' => Illuminate\Support\Facades\Blade::class,
        'Broadcast' => Illuminate\Support\Facades\Broadcast::class,
        'Bus' => Illuminate\Support\Facades\Bus::class,
        'Cache' => Illuminate\Support\Facades\Cache::class,
        'Config' => Illuminate\Support\Facades\Config::class,
        'Cookie' => Illuminate\Support\Facades\Cookie::class,
        'Crypt' => Illuminate\Support\Facades\Crypt::class,
        'Date' => Illuminate\Support\Facades\Date::class,
        'DB' => Illuminate\Support\Facades\DB::class,
        'Eloquent' => Illuminate\Database\Eloquent\Model::class,
        'Event' => Illuminate\Support\Facades\Event::class,
        'File' => Illuminate\Support\Facades\File::class,
        'Gate' => Illuminate\Support\Facades\Gate::class,
        'Hash' => Illuminate\Support\Facades\Hash::class,
        'Http' => Illuminate\Support\Facades\Http::class,
        'Js' => Illuminate\Support\Js::class,
        'Lang' => Illuminate\Support\Facades\Lang::class,
        'Log' => Illuminate\Support\Facades\Log::class,
        'Mail' => Illuminate\Support\Facades\Mail::class,
        'Notification' => Illuminate\Support\Facades\Notification::class,
        'Password' => Illuminate\Support\Facades\Password::class,
        'Process' => Illuminate\Support\Facades\Process::class,
        'Queue' => Illuminate\Support\Facades\Queue::class,
        'RateLimiter' => Illuminate\Support\Facades\RateLimiter::class,
        'Redirect' => Illuminate\Support\Facades\Redirect::class,
        'Request' => Illuminate\Support\Facades\Request::class,
        'Response' => Illuminate\Support\Facades\Response::class,
        'Route' => Illuminate\Support\Facades\Route::class,
        'Schema' => Illuminate\Support\Facades\Schema::class,
        'Session' => Illuminate\Support\Facades\Session::class,
        'Storage' => Illuminate\Support\Facades\Storage::class,
        'Str' => Illuminate\Support\Str::class,
        'URL' => Illuminate\Support\Facades\URL::class,
        'Validator' => Illuminate\Support\Facades\Validator::class,
        'View' => Illuminate\Support\Facades\View::class,
        'Vite' => Illuminate\Support\Facades\Vite::class,
    ],
];
EOF
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
    cd /var/www/ftr
    rm -rf /tmp/laravel_skeleton_temp
fi

composer install --no-dev --optimize-autoloader

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤
echo "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞..."
chown -R www-data:www-data /var/www/ftr
chmod -R 755 /var/www/ftr
chmod -R 775 /var/www/ftr/storage /var/www/ftr/bootstrap/cache

# –°–æ–∑–¥–∞–Ω–∏–µ .env
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
if [ -f ".env.example" ]; then
    cp .env.example .env
else
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª
    cat > .env << 'EOF'
APP_NAME="FTR Registration"
APP_ENV=production
APP_KEY=
APP_DEBUG=false
APP_URL=http://localhost

LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=ftr_registration
DB_USERNAME=root
DB_PASSWORD=

BROADCAST_DRIVER=log
CACHE_DRIVER=file
FILESYSTEM_DISK=local
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=mt1

VITE_APP_NAME="${APP_NAME}"
VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
EOF
fi
sed -i 's/DB_DATABASE=.*/DB_DATABASE=ftr_registration/' .env
sed -i 's/DB_USERNAME=.*/DB_USERNAME=ftr_user/' .env
sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=ftr_password/' .env
sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞
echo "üîë –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á..."
if [ -f "artisan" ]; then
    php artisan key:generate
else
    echo "‚ö†Ô∏è  –§–∞–π–ª artisan –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–ª—é—á–∞"
fi

# –ò–º–ø–æ—Ä—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üì• –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "reg_danceorg.sql" ]; then
    mysql -u ftr_user -pftr_password ftr_registration < reg_danceorg.sql
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞"
else
    echo "‚ö†Ô∏è  –§–∞–π–ª reg_danceorg.sql –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç"
fi

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üóÑÔ∏è  –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
if [ -f "artisan" ]; then
    php artisan migrate --force
else
    echo "‚ö†Ô∏è  –§–∞–π–ª artisan –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–æ–≤
echo "üíæ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–∞–ø–æ–≤..."
mkdir -p /var/backups/ftr
chown -R www-data:www-data /var/backups/ftr

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é PHP
PHP_VERSION=$(php -r "echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;")
echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤–µ—Ä—Å–∏—è PHP: $PHP_VERSION"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx..."
cat > /etc/nginx/sites-available/ftr <<EOF
server {
    listen 80;
    server_name _;
    root /var/www/ftr/public;
    index index.php;

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php${PHP_VERSION}-fpm.sock;
        fastcgi_param SCRIPT_FILENAME \$realpath_root\$fastcgi_script_name;
        include fastcgi_params;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–π—Ç–∞
ln -sf /etc/nginx/sites-available/ftr /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron
echo "‚è∞ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron..."
cat > /etc/cron.d/ftr-backup <<EOF
0 2 * * * root /var/www/ftr/backup.sh
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo "üîÑ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
cat > /var/www/ftr/update.sh <<EOF
#!/bin/bash
cd /var/www/ftr
git pull origin main
composer install --no-dev --optimize-autoloader
php artisan migrate --force
php artisan config:cache
php artisan route:cache
php artisan view:cache
systemctl reload php${PHP_VERSION}-fpm
systemctl reload nginx
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
EOF

chmod +x /var/www/ftr/update.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ç–∫–∞–ø–∞
echo "üíæ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞..."
cat > /var/www/ftr/backup.sh <<EOF
#!/bin/bash
BACKUP_DIR="/var/backups/ftr"
DATE=\$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="ftr_backup_\$DATE.sql"

mysqldump -u ftr_user -pftr_password ftr_registration > \$BACKUP_DIR/\$BACKUP_FILE
gzip \$BACKUP_DIR/\$BACKUP_FILE
find \$BACKUP_DIR -name "ftr_backup_*.sql.gz" -mtime +30 -delete

echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: \$BACKUP_FILE.gz"
EOF

chmod +x /var/www/ftr/backup.sh

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
systemctl restart php${PHP_VERSION}-fpm
systemctl restart nginx
systemctl restart mysql

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx..."
nginx -t
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
systemctl is-active --quiet nginx && echo "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
systemctl is-active --quiet php${PHP_VERSION}-fpm && echo "‚úÖ PHP-FPM —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå PHP-FPM –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
systemctl is-active --quiet mysql && echo "‚úÖ MySQL —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå MySQL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç..."
if curl -s -o /dev/null -w "%{http_code}" http://localhost | grep -q "200\|404"; then
    echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º:"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Nginx..."
    tail -5 /var/log/nginx/error.log 2>/dev/null || echo "–õ–æ–≥–∏ Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ PHP-FPM..."
    tail -5 /var/log/php${PHP_VERSION}-fpm.log 2>/dev/null || echo "–õ–æ–≥–∏ PHP-FPM –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞..."
    ls -la /var/www/ftr/public/ 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è public –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª index.php..."
    ls -la /var/www/ftr/public/index.php 2>/dev/null || echo "–§–∞–π–ª index.php –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "üåê –°–∞–π—Ç: http://$(hostname -I | awk '{print $1}')"
echo "üìÅ –ü—Ä–æ–µ–∫—Ç: /var/www/ftr"
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: /var/www/ftr/update.sh"
echo "üíæ –ë—ç–∫–∞–ø: /var/www/ftr/backup.sh"
echo ""
echo "‚ö†Ô∏è  –ù–ï –ó–ê–ë–£–î–¨–¢–ï:"
echo "   1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL"
echo "   2. –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª–∏"
echo "   3. –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
echo ""
